/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LC(SPACE)  &mt LC(X) X                    &mt LC(V) V             &mt LC(L) L       &mt LC(C) C  &mt LC(W) W                    &mt LC(K) K            &mt LC(H) H     &mt LC(G) G          &mt LC(F) F            &mt LC(Q) Q  &mt LC(S) MINUS
&kp LC(LS(M))  &mt LC(U) U                    &mt LC(I) I             &mt LC(A) A       &mt LC(E) E  &mt LC(O) O                    &mt LC(S) S            &mt LC(N) N     &mt LC(R) R          &mt LC(T) T            &mt LC(D) D  &mt LC(Y) Y
&kp LSHFT      &mt LEFT_CONTROL LEFT_BRACKET  &mt LEFT_WIN SEMICOLON  &mt LEFT_ALT SQT  &mt LC(P) P  &mt LC(Z) Z                    &mt LC(B) B            &mt LC(M) M     &mt LC(COMMA) COMMA  &mt LC(PERIOD) PERIOD  &mt LC(J) J  &kp ESC
                                                                      &mo 1             &kp SPACE    &mt LC(BACKSPACE) BACKSPACE    &mt LC(RETURN) RETURN  &kp LEFT_SHIFT  &mo 2
            >;
        };

        special {
            bindings = <
&none  &kp TILDE      &kp         &kp  &kp  &kp    &kp  &kp  &kp  &kp  &kp  &kp
&none  &kp            &kp         &kp  &kp  &kp    &kp  &kp  &kp  &kp  &kp  &kp
&none  &kp BACKSLASH  &kp DOLLAR  &kp  &kp  &kp    &kp  &kp  &kp  &kp  &kp  &kp
                                  &kp  &kp  &kp    &kp  &kp  &kp
            >;
        };

        num {
            bindings = <
&none  &kp PG_UP  &mt LC(BACKSPACE) BACKSPACE  &kp UP    &mt LC(DELETE) DELETE  &kp PG_DN    &kp SYSREQ       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none      &none
&none  &kp HOME   &mt LC(LEFT) LEFT            &kp DOWN  &mt LC(RIGHT) RIGHT    &kp END      &kp LG(LS(S))    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp RSHFT  &kp QUESTION
&none  &kp LCTRL  &kp H                        &kp J     &kp K                  &kp L        &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LALT   &kp DOLLAR
                                               &trans    &kp TAB                &trans       &trans           &trans           &trans
            >;
        };

        numbers_bt {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&none       &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &trans  &trans
                                        &none         &trans        &none           &none     &trans    &none
            >;
        };
    };
};
